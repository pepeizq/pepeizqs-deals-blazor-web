@page "/admin/"

@rendermode InteractiveServer

@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.Data.SqlClient
@using pepeizqs_deals_web.Data

@inject IHttpContextAccessor Contexto
@inject NavigationManager NavManager
@inject IJSRuntime JavaScript

<style>
    .boton-pestañas {
        color: var(--colorTexto);
        background: transparent;
        text-align: center;
        border: 0;
        width: 100%;
        transition: transform .2s;
        font-size: 17px;
        padding: 10px;
    }

    .boton-pestañas:hover {
        color: var(--colorTextoHover);
        transform: scale(1.01);
    }
</style>

@if (usuarioAdmin == true)
{
    <HeadContent>
        <PageTitle>Admin</PageTitle>
    </HeadContent>

    <div style="margin: 40px 0px;">
        <div style="display: flex; align-items: start; width: 100%; font-size: 17px; gap: 40px;">
            <div style="width: 15%;">
                <div>
                    @if (nuevosDuplicadosCantidad > 0)
                    {
                        <button class="boton-pestañas" @onclick="MostrarDuplicados" style="@estiloDuplicados">Duplicados (@nuevosDuplicadosCantidad)</button>
                    }

                    @if (nuevosErroresCantidad > 0)
                    {
                        <button class="boton-pestañas" @onclick="MostrarErrores" style="@estiloErrores">Errores (@nuevosErroresCantidad)</button>
                    }

                    @if (nuevosCorreosDeals > 0)
                    {
                        <button class="boton-pestañas" @onclick="MostrarEnlaces">Correos Deals (@nuevosCorreosDeals)</button>
                    }

                    @if (nuevosCorreosApps > 0)
                    {
                        <button class="boton-pestañas" @onclick="MostrarEnlaces">Correos Apps (@nuevosCorreosApps)</button>
                    }

                    @if (nuevosPendientesCantidad > 0)
                    {
                        <button class="boton-pestañas" @onclick="MostrarPendientes" style="@estiloPendientes">Pendientes (@nuevosPendientesCantidad)</button>
                    }

                    @if (nuevosDLCsCantidad > 0)
                    {
                        <button class="boton-pestañas" @onclick="MostrarDLCs" style="@estiloDLCs">DLCs (@nuevosDLCsCantidad)</button>
                    }

                    <button class="boton-pestañas" @onclick="MostrarEnlaces" style="@estiloEnlaces">Enlaces</button>
                    <button class="boton-pestañas" @onclick="MostrarTareas" style="@estiloTareas">Tareas</button>
                    <button class="boton-pestañas" @onclick="MostrarDivisas" style="@estiloDivisas">Divisas</button>          
                </div>

                <hr/>

                <div>
                    <button class="boton-pestañas" @onclick="MostrarJuegos" style="@estiloJuegos">Juegos</button>
                    <button class="boton-pestañas" @onclick="MostrarNoticias" style="@estiloNoticias">Noticias</button>
                    <button class="boton-pestañas" @onclick="MostrarBundles" style="@estiloBundles">Bundles</button>
                    <button class="boton-pestañas" @onclick="MostrarGratis" style="@estiloGratis">Gratis</button>
                    <button class="boton-pestañas" @onclick="MostrarSuscripciones" style="@estiloSuscripciones">Suscripciones</button>
                </div>

                <hr/>

                <div>
                    <button class="boton-pestañas" @onclick="MostrarRecompensas" style="@estiloRecompensas;">Recompensas</button>
                    <button class="boton-pestañas" @onclick="MostrarCupones" style="@estiloCupones;">Cupones</button>
                </div>
            </div>

            <div style="width: 85%;">
                @if (mostrarEnlaces == true)
                {
                    <Enlaces correosDeals="nuevosCorreosDeals" correosApps="nuevosCorreosApps" />
                }

                @if (mostrarDuplicados == true)
                {
                    <Duplicados/>
                }

                @if (mostrarErrores == true)
                {
                    <Errores/>
                }

                @if (mostrarTareas == true)
                {
                    <Tareas/>
                }

                @if (mostrarDivisas == true)
                {
                    <Divisas/>
                }

                @if (mostrarDLCs == true)
                {
                    <DLCs/>
                }

                @if (mostrarPendientes == true)
                {
                    <Pendientes />
                }

                @if (mostrarJuegos == true)
                {
                    <Juegos />
                }

                @if (mostrarNoticias == true)
                {
                    <Noticias />
                }

                @if (mostrarBundles == true)
                {
                    <Bundles />
                }

                @if (mostrarGratis == true)
                {
                    <Gratis/>
                }

                @if (mostrarSuscripciones == true)
                {
                    <Suscripciones/>
                }

                @if (mostrarRecompensas == true)
                {
                    <Recompensas/>
                }

                @if (mostrarCupones == true)
                {
                    <Cupones/>
                }
            </div>
        </div>
    </div>
}

@code {

    #nullable disable

    private string idioma = "en";
    private string usuarioId = null;

    private bool usuarioAdmin = false;

    protected override void OnInitialized()
    {
        if (Contexto == null || Contexto.HttpContext == null || Contexto.HttpContext.User == null || Contexto.HttpContext.User.Identity == null || Contexto.HttpContext.User.Identity.IsAuthenticated == false)
        {
            NavManager.NavigateTo("/");
            return;
		}

        idioma = Contexto.HttpContext.Request.Headers["Accept-Language"].ToString().Split(";").FirstOrDefault()?.Split(",").FirstOrDefault();
        usuarioId = Contexto.HttpContext.User.FindFirst(u => u.Type.Contains("nameidentifier"))?.Value;

        if (string.IsNullOrEmpty(usuarioId) == false)
        {
            usuarioAdmin = BaseDatos.Usuarios.Buscar.RolDios(usuarioId);
        }

        if (usuarioAdmin == true)
        {
            bool pestañaAbierta = false;

            SqlConnection conexion = Herramientas.BaseDatos.Conectar();

            using (conexion)
            {
                nuevosErroresCantidad = BaseDatos.Admin.Buscar.CantidadErrores(conexion);

                if (nuevosErroresCantidad > 0 && pestañaAbierta == false)
                {
                    MostrarErrores();
                    pestañaAbierta = true;
                }

                nuevosDuplicadosCantidad = BaseDatos.Admin.Buscar.Dato("duplicados", conexion);

                if (nuevosDuplicadosCantidad > 0 && pestañaAbierta == false)
                {
                    MostrarDuplicados();
                    pestañaAbierta = true;
                }

                nuevosPendientesCantidad = BaseDatos.Pendientes.Buscar.TiendasCantidad() + BaseDatos.Pendientes.Buscar.SuscripcionCantidad() + BaseDatos.Pendientes.Buscar.StreamingCantidad() + BaseDatos.Pendientes.Buscar.PlataformaCantidad();

                if (nuevosPendientesCantidad > 0 && pestañaAbierta == false)
                {
                    MostrarPendientes();
                    pestañaAbierta = true;
                }

                nuevosCorreosDeals = BaseDatos.Admin.Buscar.Dato("correos", conexion);

                if (nuevosCorreosDeals > 0 && pestañaAbierta == false)
                {
                    MostrarEnlaces();
                    pestañaAbierta = true;
                }

                nuevosCorreosApps = BaseDatos.Admin.Buscar.Dato("correos2", conexion);

                if (nuevosCorreosApps > 0 && pestañaAbierta == false)
                {
                    MostrarEnlaces();
                    pestañaAbierta = true;
                }

                nuevosDLCsCantidad = BaseDatos.Juegos.Buscar.DLCsCantidad(conexion);

                if (nuevosDLCsCantidad > 0 && pestañaAbierta == false)
                {
                    MostrarDLCs();
                    pestañaAbierta = true;
                }

                ActualizarMensajeCorreos(nuevosCorreosDeals, nuevosCorreosApps);
            }

            if (pestañaAbierta == false)
            {
                MostrarEnlaces();
            }
        }
        else
        {
            NavManager.NavigateTo("/");
        }
    }

    protected override async Task OnAfterRenderAsync(bool primerRender)
    {
        if (primerRender == true)
        {
            await JavaScript.InvokeVoidAsync("moverScroll", "cuerpazo");
        }
    }

    private string fondo = "background-color: var(--fondoOscuro); border: 1px solid var(--fondoBotonPequeño)";

    private void CerrarPestañas()
    {
        mostrarEnlaces = false;
        mostrarDuplicados = false;
        mostrarErrores = false;
        mostrarTareas = false;
        mostrarDivisas = false;
        mostrarDLCs = false;
        mostrarPendientes = false;
        mostrarJuegos = false;
        mostrarNoticias = false;
        mostrarBundles = false;
        mostrarGratis = false;
        mostrarSuscripciones = false;
        mostrarRecompensas = false;
        mostrarCupones = false;

        estiloEnlaces = null;
        estiloDuplicados = null;
        estiloErrores = null;
        estiloTareas = null;
        estiloDivisas = null;
        estiloDLCs = null;
        estiloPendientes = null;
        estiloJuegos = null;
        estiloNoticias = null;
        estiloBundles = null;
        estiloGratis = null;
        estiloSuscripciones = null;
        estiloRecompensas = null;
        estiloCupones = null;
    }

    #region Enlaces

    private bool mostrarEnlaces = false;
    private string estiloEnlaces = null;

    private void MostrarEnlaces()
    {
        CerrarPestañas();
        mostrarEnlaces = true;
        estiloEnlaces = fondo;
    }

    #endregion

    #region Duplicados

    private bool mostrarDuplicados = false;
    private string estiloDuplicados = null;

    private int nuevosDuplicadosCantidad = 0;

    private void MostrarDuplicados()
    {
        CerrarPestañas();
        mostrarDuplicados = true;
        estiloDuplicados = fondo;
    }

    #endregion

    #region Errores

    private bool mostrarErrores = false;
    private string estiloErrores = null;

    private int nuevosErroresCantidad = 0;

    private void MostrarErrores()
    {
        CerrarPestañas();
        mostrarErrores = true;
        estiloErrores = fondo;

        nuevosErroresCantidad = BaseDatos.Admin.Buscar.CantidadErrores();
    }

    #endregion

    #region Correos

    private List<Herramientas.CorreoConId> correos = new List<Herramientas.CorreoConId>();
    private int nuevosCorreosDeals = 0;
    private int nuevosCorreosApps = 0;

    private void ActualizarMensajeCorreos(int correosDeals, int correosApps)
    {
        nuevosCorreosDeals = correosDeals;
        nuevosCorreosApps = correosApps;
    }

    #endregion

    #region Tareas

    private bool mostrarTareas = false;
    private string estiloTareas = null;

    private void MostrarTareas()
    {
        CerrarPestañas();
        mostrarTareas = true;
        estiloTareas = fondo;
    }

    #endregion

    #region Divisas

    private bool mostrarDivisas = false;
    private string estiloDivisas = null;

    private void MostrarDivisas()
    {
        CerrarPestañas();
        mostrarDivisas = true;
        estiloDivisas = fondo;
    }

    #endregion

    #region DLCs

    private bool mostrarDLCs = false;
    private string estiloDLCs = null;

    private int nuevosDLCsCantidad = 0;

    private void MostrarDLCs()
    {
        CerrarPestañas();
        mostrarDLCs = true;
        estiloDLCs = fondo;

        nuevosDLCsCantidad = BaseDatos.Juegos.Buscar.DLCsCantidad();
    }

    #endregion

    #region Pendientes

    private bool mostrarPendientes = false;
    private string estiloPendientes = null;

    private int nuevosPendientesCantidad = 0;

    private void MostrarPendientes()
    {
        CerrarPestañas();
        mostrarPendientes = true;
        estiloPendientes = fondo;

        nuevosPendientesCantidad = BaseDatos.Pendientes.Buscar.TiendasCantidad() + BaseDatos.Pendientes.Buscar.SuscripcionCantidad() + BaseDatos.Pendientes.Buscar.StreamingCantidad() + BaseDatos.Pendientes.Buscar.PlataformaCantidad();
    }

    #endregion

    #region Juegos

    private bool mostrarJuegos = false;
    private string estiloJuegos = null;

    private void MostrarJuegos()
    {
        CerrarPestañas();
        mostrarJuegos = true;
        estiloJuegos = fondo;
    }

    #endregion

    #region Noticias

    private bool mostrarNoticias = false;
    private string estiloNoticias = null;

    private void MostrarNoticias()
    {
        CerrarPestañas();
        mostrarNoticias = true;
        estiloNoticias = fondo;
    }

    #endregion

    #region Bundles

    private bool mostrarBundles = false;
    private string estiloBundles = null;

    private void MostrarBundles()
    {
        CerrarPestañas();
        mostrarBundles = true;
        estiloBundles = fondo;
    }

    #endregion

    #region Gratis

    private bool mostrarGratis = false;
    private string estiloGratis = null;

    private void MostrarGratis()
    {
        CerrarPestañas();
        mostrarGratis = true;
        estiloGratis = fondo;
    }

    #endregion

    #region Suscripciones

    private bool mostrarSuscripciones = false;
    private string estiloSuscripciones = null;

    private void MostrarSuscripciones()
    {
        CerrarPestañas();
        mostrarSuscripciones = true;
        estiloSuscripciones = fondo;
    }

    #endregion

    #region Recompensas

    private bool mostrarRecompensas = false;
    private string estiloRecompensas = null;

    private void MostrarRecompensas()
    {
        CerrarPestañas();
        mostrarRecompensas = true;
        estiloRecompensas = fondo;
    }

    #endregion

    #region Cupones

    private bool mostrarCupones = false;
    private string estiloCupones = null;

    private void MostrarCupones()
    {
        CerrarPestañas();
        mostrarCupones = true;
        estiloCupones = fondo;
    }

    #endregion
}
