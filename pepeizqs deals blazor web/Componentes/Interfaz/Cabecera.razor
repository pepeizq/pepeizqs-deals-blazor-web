@rendermode InteractiveServer

@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Web.Virtualization
@using Microsoft.AspNetCore.Identity
@using Microsoft.Data.SqlClient
@using pepeizqs_deals_blazor_web.Componentes.Account
@using pepeizqs_deals_web.Data

@inject NavigationManager NavManager
@inject IJSRuntime JavaScript

@inherits Juegos.Juego

<script>
    window.clipboardCopy = {
        copyText: function(text) {
            navigator.clipboard.writeText(text).then(function () {
                alert("Copied to clipboard");
            })
            .catch(function (error) {
                alert(error);
            });
        }
    };
</script>

<style>
    .buscador-panel {
        height: calc(100% - var(--alturaCabecera));
        width: 100%;
        left: 0;
        top: 0;
        overflow-x: auto;
        position: fixed;
        z-index: 1000;
        margin-top: var(--alturaCabecera);
        padding: 10px;
        background-color: var(--fondoOscuroTransparente);
    }

    .boton-superior {
        display: block;
        padding: 4px 12px;
        margin: 0px;
        transition: transform .2s;
        text-decoration: none;
        background-color: transparent;
        border: 0;
        color: var(--colorTexto);
    }

    .boton-superior:hover {
        transform: scale(1.01);
        color: var(--colorEnlace);
    }

    @@media (max-width: 900px) {
        .boton-superior {
            float: none;
        }
    }

    .botones-superiores {
        display: flex;
        align-items: center;
        width: 100%;
    }

    @@media (max-width: 1100px) {
        .botones-superiores {
            display: none;
        }
    }

    .botones-superiores2 {
        display: none;
    }

    @@media (max-width: 1100px) {
        .botones-superiores2 {
            display: flex;
            margin-left: auto;
        }
    }
</style>

<a href="/" id="cabecera" class="texto-logo" style="background-color: transparent; border: 0; flex: 1 auto 1;">
    pepeizq's deals
</a>

<div style="display: flex; align-items: center; gap: 10px; flex: 1 1 auto;">
    <AuthorizeView>
        <Authorized>
            @if (string.IsNullOrEmpty(usuarioId) == false)
            {
                if (BaseDatos.Usuarios.Buscar.RolDios(usuarioId) == true)
                {
                    if (conexion == null)
                    {
                        conexion = Herramientas.BaseDatos.Conectar();
                    }
                    else
                    {
                        if (conexion.State != System.Data.ConnectionState.Open)
                        {
                            conexion = Herramientas.BaseDatos.Conectar();
                        }
                    }

                    bool añadirCorreo = false;

                    using (conexion)
                    {
                        int nuevosCorreosDeals = int.Parse(BaseDatos.Admin.Buscar.Dato("correos", conexion));
                        int nuevosCorreosApps = int.Parse(BaseDatos.Admin.Buscar.Dato("correos2", conexion));

                        if (nuevosCorreosDeals > 0 || nuevosCorreosApps > 0)
                        {
                            añadirCorreo = true;
                        }
                    }

                    <a class="boton-superior" href="/admin" style="font-size: 15px;">
                        <div style="@GenerarEstilo("/admin") display: flex; align-items: center; gap: 15px;">
                            <div>
                                Admin
                            </div>

                            @if (añadirCorreo == true)
                            {
                                <div style="width: 20px; height: 20px;">
                                    <svg class="svg-icono" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M48 64C21.5 64 0 85.5 0 112c0 15.1 7.1 29.3 19.2 38.4L236.8 313.6c11.4 8.5 27 8.5 38.4 0L492.8 150.4c12.1-9.1 19.2-23.3 19.2-38.4c0-26.5-21.5-48-48-48L48 64zM0 176L0 384c0 35.3 28.7 64 64 64l384 0c35.3 0 64-28.7 64-64l0-208L294.4 339.2c-22.8 17.1-54 17.1-76.8 0L0 176z" /></svg>
                                </div>
                            }
                        </div>
                    </a>
                }
            }
        </Authorized>
    </AuthorizeView>

    @if (Herramientas.RobotsUserAgents.EsBot(userAgent) == false)
    {
        <div style="background-color: var(--fondoEntrada); padding-right: 10px; display: flex; align-items: center; gap: 10px;">
            <input type="text" @bind-value="textoBuscador" @bind-value:event="oninput" @bind-value:after="TextoCambiaBuscador" class="entrada-texto" style="background-color: transparent; min-width: 50%; font-size: 14px;" placeholder="@Herramientas.Idiomas.BuscarTexto(idioma, "SearchPlaceholder", "Header")" />

            @if (encontroAlgo == false)
            {
                <div style="max-width: 16px;">
                    <svg class="svg-icono" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                        <path d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z" />
                    </svg>
                </div>
            }
            else
            {
                <button @onclick="(e => CopiarAlClipboardEnlace(e))" style="border: 0px; background: transparent;" title="@Herramientas.Idiomas.BuscarTexto(idioma, "String1", "Header")">
                    <div style="width: 14px; max-height: 16px;">
                        <svg class="svg-icono" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
                            <path d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z" />
                        </svg>
                    </div>
                </button>

                <button @onclick="(e => LimpiarBusqueda(e))" style="border: 0px; background: transparent;" title="@Herramientas.Idiomas.BuscarTexto(idioma, "String2", "Header")">
                    <div style="width: 14px; max-height: 16px;">
                        <svg class="svg-icono" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512">
                            <path d="M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z" />
                        </svg>
                    </div>
                </button>
            }
        </div>
    }
        
    <div class="botones-superiores">
        @if (string.IsNullOrEmpty(usuarioId) == false)
        {
            <a class="boton-superior" href="/wishlist" style="font-size: 15px;">
                <div style="@GenerarEstilo("/wishlist")">
                    @Herramientas.Idiomas.BuscarTexto(idioma, "Wishlist", "Header")
                </div>
            </a>
        }

        <a class="boton-superior" href="/historical-lows" style="font-size: 15px;">
            <div style="@GenerarEstilo("/historical-lows")">
                @Herramientas.Idiomas.BuscarTexto(idioma, "HistoricalLows", "Header")
            </div>
        </a>

        <a class="boton-superior" href="/bundles" style="font-size: 15px;">
            <div style="@GenerarEstilo("/bundles")">
                @Herramientas.Idiomas.BuscarTexto(idioma, "Bundles", "Header")
            </div>
        </a>

        <a class="boton-superior" href="/free" style="font-size: 15px;">
            <div style="@GenerarEstilo("/free")">
                @Herramientas.Idiomas.BuscarTexto(idioma, "Free", "Header")
            </div>
        </a>

        <a class="boton-superior" href="/subscriptions" style="font-size: 15px;">
            <div style="@GenerarEstilo("/subscriptions")">
                @Herramientas.Idiomas.BuscarTexto(idioma, "Subscriptions", "Header")
            </div>
        </a>

        <a class="texto-cabecera boton-superior" href="https://pepeizqapps.com/extension/pepeizq-deals" target="_blank" title="@Herramientas.Idiomas.BuscarTexto(idioma, "Extension", "Footer")">
            <div style="width: 22px; height: 22px;">
                <svg class="svg-icono" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                    <path d="M0 256C0 209.4 12.5 165.6 34.3 127.1L144.1 318.3C166 357.5 207.9 384 256 384C270.3 384 283.1 381.7 296.8 377.4L220.5 509.6C95.9 492.3 0 385.3 0 256zM365.1 321.6C377.4 302.4 384 279.1 384 256C384 217.8 367.2 183.5 340.7 160H493.4C505.4 189.6 512 222.1 512 256C512 397.4 397.4 511.1 256 512L365.1 321.6zM477.8 128H256C193.1 128 142.3 172.1 130.5 230.7L54.2 98.5C101 38.5 174 0 256 0C350.8 0 433.5 51.5 477.8 128V128zM168 256C168 207.4 207.4 168 256 168C304.6 168 344 207.4 344 256C344 304.6 304.6 344 256 344C207.4 344 168 304.6 168 256z" />
                </svg>
            </div>
        </a>

        @if (usuarioPatreon == false)
        {
            <a class="boton-superior" href="/patreon" style="font-size: 15px;" title="Patreon">
                <div style="width: 22px; height: 22px;">
                    <svg class="svg-icono" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                        <path d="M489.7 153.8c-.1-65.4-51-119-110.7-138.3C304.8-8.5 207-5 136.1 28.4C50.3 68.9 23.3 157.7 22.3 246.2C21.5 319 28.7 510.6 136.9 512c80.3 1 92.3-102.5 129.5-152.3c26.4-35.5 60.5-45.5 102.4-55.9c72-17.8 121.1-74.7 121-150z" />
                    </svg>
                </div>
            </a>
        }

        <AuthorizeView>
            <Authorized>
                <div style="display: flex; align-items: center; margin-left: auto;">
                    <div class="menu-dropdown">
                        <div style="display: flex; align-items: center; font-size: 14px; cursor: pointer; gap: 15px;">
                            @if (opcionesCabecera != null)
                            {
                                if (string.IsNullOrEmpty(opcionesCabecera.Avatar) == true)
                                {
                                    <div>@opcionesCabecera.Email</div>
                                }
                                else
                                {
                                    @if (opcionesCabecera.Avatar.ToLower().Contains(".jpg") == true || 
                                        opcionesCabecera.Avatar.ToLower().Contains(".jpeg") == true || 
                                        opcionesCabecera.Avatar.ToLower().Contains(".png") == true || 
                                        opcionesCabecera.Avatar.ToLower().Contains(".webp") == true)
                                    {
                                        <img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(opcionesCabecera.Avatar)" style="max-height: 32px; max-width: 32px;" title="@opcionesCabecera.Nickname"/>
                                    }
                                    else
                                    {
                                        <div>@opcionesCabecera.Email</div>
                                    }
                                }
                            }

                            <div style="max-width: 10px;">
                                <svg class="svg-icono" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512">
                                    <path d="M137.4 374.6c12.5 12.5 32.8 12.5 45.3 0l128-128c9.2-9.2 11.9-22.9 6.9-34.9s-16.6-19.8-29.6-19.8L32 192c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9l128 128z" />
                                </svg>
                            </div>
                        </div>

                        <div class="menu-dropdown-contenido" style="right: -10px;">
                            <a href="/account" class="texto-cabecera menu-dropdown-item" style="text-align: right; border: 0; width: 100%; font-size: 14px;">
                                @Herramientas.Idiomas.BuscarTexto(idioma, "Account", "Header")
                            </a>

                            <a href="/account/logout" class="texto-cabecera menu-dropdown-item" style="text-align: right; border: 0; width: 100%; font-size: 14px;">
                                @Herramientas.Idiomas.BuscarTexto(idioma, "Logout", "Header")
                            </a>
                        </div>
                    </div>
                </div>
            </Authorized>
            <NotAuthorized>
                <div style="display: flex; align-items: center; margin-left: auto;">
                    <a href="/account/login" target="_blank" class="boton-superior" style="text-align: left; border: 0; padding: 8px 15px; margin: 0px; font-size: 14px;">
                        <div style="@GenerarEstilo("/account/login")">
                            @Herramientas.Idiomas.BuscarTexto(idioma, "Login", "Header")
                        </div>
                    </a>

                    <a href="/account/register" target="_blank" class="boton-superior" style="text-align: left; border: 0; padding: 8px 15px; margin: 0px; font-size: 14px;">
                        <div style="@GenerarEstilo("/account/register")">
                            @Herramientas.Idiomas.BuscarTexto(idioma, "Register", "Header")
                        </div>
                    </a>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </div>

    <div class="botones-superiores2" style="cursor: pointer;">
        <div class="menu-dropdown">
            <div style="width: 18px; height: 18px;">
                <svg class="svg-icono" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                    <path d="M0 96C0 78.3 14.3 64 32 64l384 0c17.7 0 32 14.3 32 32s-14.3 32-32 32L32 128C14.3 128 0 113.7 0 96zM0 256c0-17.7 14.3-32 32-32l384 0c17.7 0 32 14.3 32 32s-14.3 32-32 32L32 288c-17.7 0-32-14.3-32-32zM448 416c0 17.7-14.3 32-32 32L32 448c-17.7 0-32-14.3-32-32s14.3-32 32-32l384 0c17.7 0 32 14.3 32 32z" />
                </svg>
            </div>

            <div class="menu-dropdown-contenido" style="left: -200px;">
                @if (string.IsNullOrEmpty(usuarioId) == false)
                {
                    <a class="texto-cabecera boton-superior" href="/wishlist" style="font-size: 15px;">
                        @Herramientas.Idiomas.BuscarTexto(idioma, "Wishlist", "Header")
                    </a>
                }   

                <a class="texto-cabecera boton-superior" href="/historical-lows" style="font-size: 15px;">
                    @Herramientas.Idiomas.BuscarTexto(idioma, "HistoricalLows", "Header")
                </a>

                <a class="texto-cabecera boton-superior" href="/bundles" style="font-size: 15px;">
                    @Herramientas.Idiomas.BuscarTexto(idioma, "Bundles", "Header")
                </a>

                <a class="texto-cabecera boton-superior" href="/free" style="font-size: 15px;">
                    @Herramientas.Idiomas.BuscarTexto(idioma, "Free", "Header")
                </a>

                <a class="texto-cabecera boton-superior" href="/subscriptions" style="font-size: 15px;">
                    @Herramientas.Idiomas.BuscarTexto(idioma, "Subscriptions", "Header")
                </a>

                <a class="texto-cabecera boton-superior" href="https://pepeizqapps.com/extension/pepeizq-deals" target="_blank" style="font-size: 15px;">
                    @Herramientas.Idiomas.BuscarTexto(idioma, "Extension", "Footer")
                </a>

                @if (usuarioPatreon == false)
                {
                    <a class="texto-cabecera boton-superior" href="/patreon" style="font-size: 15px;">
                        Patreon
                    </a>
                }

                <hr/>

                <AuthorizeView>
                    <Authorized>
                        <a class="texto-cabecera boton-superior" href="/account" style="font-size: 15px;">
                            @Herramientas.Idiomas.BuscarTexto(idioma, "Account", "Header")
                        </a>

                        <a class="texto-cabecera boton-superior" href="/account/logout" style="font-size: 15px;">
                            @Herramientas.Idiomas.BuscarTexto(idioma, "Logout", "Header")
                        </a>
                    </Authorized>
                    <NotAuthorized>
                        <a class="texto-cabecera boton-superior" href="/account/login" target="_blank" style="font-size: 15px;">
                            @Herramientas.Idiomas.BuscarTexto(idioma, "Login", "Header")
                        </a>

                        <a class="texto-cabecera boton-superior" href="/account/register" target="_blank" style="font-size: 15px;">
                            @Herramientas.Idiomas.BuscarTexto(idioma, "Register", "Header")
                        </a>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>
    </div>

    @if (encontroAlgo == true)
    {
        <div class="buscador-panel" style="height: calc(100% - var(--alturaCabecera)); width: 100%; top: 0; left: 0; overflow-x: auto; position: fixed; z-index: 1000; margin-top: var(--alturaCabecera); background-color: var(--fondoCuerpo); display: flex; align-items: start; flex-direction: column;">
            <div style="margin-left: auto; margin-right: auto; max-width: var(--anchoCuerpo); width: 100%;"> 
               <Virtualize Context="juego" ItemsProvider="@CogerJuegos" ItemSize="107" OverscanCount="3">
                    <ItemContent>
                        @{
                            string fondoColor = "background: radial-gradient(ellipse at top left, var(--fondoBotonPequeño), var(--fondoOscuro));"; ;

                            if (string.IsNullOrEmpty(usuarioId) == false)
                            {
                                bool usuarioTieneJuego = Herramientas.UsuarioJuegos.ComprobarSiTiene(juegosUsuario, juego);
                                bool usuarioTieneDeseado = false;

                                if (usuarioTieneJuego == true)
                                {
                                    fondoColor = "background: radial-gradient(ellipse at top left, var(--fondoBotonPequeño), var(--fondoBien));";
                                }
                                else
                                {
                                    usuarioTieneDeseado = Herramientas.Deseados.ComprobarSiEsta(deseadosUsuario, juego, Juegos.JuegoDRM.NoEspecificado);

                                    if (usuarioTieneDeseado == true)
                                    {
                                        fondoColor = "background: radial-gradient(ellipse at top left, var(--fondoBotonPequeño), var(--fondoAlerta));";
                                    }
                                }
                            }
                        }
                         
                        <div class="perfil-flexible-centrado" style="padding-top: 25px;">
                            @{
                                int ancho = 230;
                                int alto = 107;
                                string imagen = "width: " + ancho.ToString() + "px; height: " + alto.ToString() + "px;";
                                string enlace = "/game/" + juego.Id.ToString() + "/" + Herramientas.EnlaceAdaptador.Nombre(juego.Nombre) + "/";
                            }
                                 
                            <a href="@enlace" @onclick="(e => LimpiarBusqueda(e))" class="boton-pequeño" style="padding: 0px; @fondoColor">
                                <div class="perfil-flexible-centrado">
                                    <div>
                                        <img src="@juego.Imagenes.Header_460x215" style="@imagen" />
                                    </div>

                                    <div style="width: 100%; padding-left: 20px; padding-right: 20px;">
                                        <div>
                                            @juego.Nombre
                                        </div>

                                        <div style="margin-top: 5px; font-size: 15px;">
                                            @Herramientas.Buscador.GenerarMensaje(idioma, juego, true, true, true)
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    </ItemContent>
                </Virtualize>
            </div>
        </div>
    }
</div>

@code {

    #nullable disable

    [Parameter]
    public string idioma { get; set; }

    [Parameter]
    public string usuarioId { get; set; }

    [Parameter]
    public string enlace { get; set; }

    [Parameter]
    public string userAgent { get; set; }

    [SupplyParameterFromQuery]
    private string Search { get; set; }

    private Herramientas.UsuarioListadosJuegos juegosUsuario = null;
    private Usuario deseadosUsuario = null;
    private bool usuarioPatreon = false;
    private Usuario opcionesCabecera = null;

    private SqlConnection conexion = new SqlConnection();

    protected override void OnInitialized()
    {
        if (string.IsNullOrEmpty(usuarioId) == false)
        {
            juegosUsuario = Herramientas.UsuarioJuegos.Cargar(usuarioId);
            deseadosUsuario = BaseDatos.Usuarios.Buscar.DeseadosTiene(usuarioId);
            usuarioPatreon = Herramientas.Patreon.VerificarActivo(BaseDatos.Usuarios.Buscar.FechaPatreon(usuarioId));
            opcionesCabecera = BaseDatos.Usuarios.Buscar.OpcionesCabecera(usuarioId);
        }
    }

    protected override void OnParametersSet()
    {
        if (string.IsNullOrEmpty(Search) == false)
        {
            textoBuscador = Search;
            TextoCambiaBuscador();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        enlace = NavManager.Uri;
        await InvokeAsync(StateHasChanged);
    }

    #region Botones Cabecera

    private string GenerarEstilo(string enlaceBoton)
    {
        if (NavManager.Uri.Contains(enlaceBoton) == true)
        {
            return "border-bottom: 2px solid var(--colorEnlace); color: var(--colorEnlace);";
        }
        else
        {
            return null;
        }
    }

    #endregion

    #region Buscador

    private bool encontroAlgo = false;
    private List<Juegos.Juego> resultadosMostrar = new List<Juegos.Juego>();

    private string textoBuscador = string.Empty;

    private void TextoCambiaBuscador()
    {
        textoBuscador = textoBuscador.Replace("'", null);

        if (textoBuscador.Trim().Length > 3)
        {
            resultadosMostrar.Clear();

            if (conexion == null)
            {
                conexion = Herramientas.BaseDatos.Conectar();
            }
            else
            {
                if (conexion.State != System.Data.ConnectionState.Open)
                {
                    conexion = Herramientas.BaseDatos.Conectar();
                }
            }

            using (conexion)
            {
                if (APIs.Steam.Juego.Detectar(textoBuscador) == true)
                {
                    textoBuscador = APIs.Steam.Juego.LimpiarID(textoBuscador);

                    resultadosMostrar = new List<Juegos.Juego>() { BaseDatos.Juegos.Buscar.UnJuego(null, textoBuscador) };

                    if (resultadosMostrar.Count > 0)
                    {
                        textoBuscador = resultadosMostrar[0].Nombre;
                    }
                }
                else if (APIs.GOG.Juego.Detectar(textoBuscador) == true)
                {
                    textoBuscador = APIs.GOG.Juego.LimpiarSlug(textoBuscador);

                    resultadosMostrar = new List<Juegos.Juego>() { BaseDatos.Juegos.Buscar.UnJuego(null, null, textoBuscador) };

                    if (resultadosMostrar.Count > 0)
                    {
                        textoBuscador = resultadosMostrar[0].Nombre;
                    }
                }
                else if (APIs.EpicGames.Juego.Detectar(textoBuscador) == true)
                {
                    textoBuscador = APIs.EpicGames.Juego.LimpiarSlug(textoBuscador);

                    resultadosMostrar = new List<Juegos.Juego>() { BaseDatos.Juegos.Buscar.UnJuego(null, null, null, textoBuscador) };

                    if (resultadosMostrar.Count > 0)
                    {
                        textoBuscador = resultadosMostrar[0].Nombre;
                    }
                }
                else
                {
                    resultadosMostrar = BaseDatos.Juegos.Buscar.Nombre(textoBuscador, conexion, 50, false, -1);
                }

                if (resultadosMostrar.Count > 0)
                {
                    encontroAlgo = true;
                }
                else
                {
                    encontroAlgo = false;
                }
            }
        }
        else
        {
            encontroAlgo = false;
        }
    }

    private async ValueTask<ItemsProviderResult<Juegos.Juego>> CogerJuegos(ItemsProviderRequest request)
    {
        await InvokeAsync(StateHasChanged); 
        var numImages = Math.Min(request.Count, resultadosMostrar.Count - request.StartIndex);
        var urls = resultadosMostrar.Skip(request.StartIndex).Take(numImages);
        return new ItemsProviderResult<Juegos.Juego>(urls, resultadosMostrar.Count);
    }

    private void LimpiarBusqueda(MouseEventArgs e)
	{
        textoBuscador = string.Empty;
        resultadosMostrar.Clear();
        encontroAlgo = false;
	}

    private async Task CopiarAlClipboardEnlace(MouseEventArgs e)
    {
        await JavaScript.InvokeVoidAsync("clipboardCopy.copyText", "https://pepeizqdeals.com/?search=" + textoBuscador);
    }

    #endregion
}

