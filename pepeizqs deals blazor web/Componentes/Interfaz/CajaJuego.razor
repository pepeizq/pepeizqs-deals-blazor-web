@using Juegos
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.JSInterop
@using Microsoft.VisualBasic

@inject IJSRuntime JavaScript

<style>
	.cjuego-titulo {
		padding: 10px 20px;
	}

	.cjuego-fecha {
		font-size: 14px;
	}

	.cjuego-descuento {
		font-size: 16px;
		padding: 10px 15px;
		min-width: 65px;
	}

	.cjuego-precio {
		font-size: 18px;
		min-width: 110px;
	}

	@@media (max-width: 800px) {
		.cjuego-titulo {
			padding: 5px 10px;
		}

		.cjuego-fecha {
			font-size: 10px;
		}

		.cjuego-descuento {
			font-size: 12px;
			padding: 5px 8px;
			min-width: 35px;
		}

		.cjuego-precio {
			font-size: 12px;
			min-width: 50px;
		}
	}

	.boton-expandir {
		transition: transform .2s;
	}

	.boton-expandir:hover {
		transform: scale(1.01);
	}
</style>

<script>
	function enseñarTooltip(e, id) {
		if (matchMedia('(pointer:fine)').matches) 
		{
			var x = e.clientX,
				y = e.clientY;

			var tooltip = document.getElementById(id);

			if (tooltip)
			{
				if (screen.width / 2 > x) {
					tooltip.style.top = (y + 10) + 'px';
					tooltip.style.left = (x + 20) + 'px';
				}
				else {
					tooltip.style.top = (y - 10) + 'px';
					tooltip.style.left = (x - 20 - tooltip.getBoundingClientRect().width) + 'px';
				};
			};
		};
    };
</script>

<script>
	window.clipboardCopy = {
		copyText: function(text) {
			navigator.clipboard.writeText(text);
		}
	};
</script>

@if (enseñarAlerta == true)
{
	<div style="width: fit-content; background-color: var(--fondoAlerta); color: var(--colorTexto); padding: 10px 15px; margin: 30px; top: var(--alturaCabecera); left: 0; position: fixed; z-index: 1001; border: 2px solid var(--fondoSubcabecera); box-shadow: 0px 4px 8px 0px rgba(0, 0, 0, 0.28),0px 0px 2px 0px rgba(0, 0, 0, 0.24);">
		<div style="display: flex; align-items: center; gap: 10px;">
			<div>
				@Herramientas.Idiomas.BuscarTexto(idioma, "String1", "Clipboard")
			</div>

			<button @onclick="CerrarAvisoClipboard" class="boton-pequeño" style="display: flex; padding: 0px; background-color: transparent; width: fit-content;">
				<div style="width: 20px; height: 20px;">
					<svg class="svg-boton" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 640">
						<path d="M183.1 137.4C170.6 124.9 150.3 124.9 137.8 137.4C125.3 149.9 125.3 170.2 137.8 182.7L275.2 320L137.9 457.4C125.4 469.9 125.4 490.2 137.9 502.7C150.4 515.2 170.7 515.2 183.2 502.7L320.5 365.3L457.9 502.6C470.4 515.1 490.7 515.1 503.2 502.6C515.7 490.1 515.7 469.8 503.2 457.3L365.8 320L503.1 182.6C515.6 170.1 515.6 149.8 503.1 137.3C490.6 124.8 470.3 124.8 457.8 137.3L320.5 274.7L183.1 137.4z" />
					</svg>
				</div>
			</button>
		</div>
	</div>
}

@if (juego != null)
{
	#nullable disable

	int idMaestra = juego.IdMaestra;

	if (tipo == Tipo.Bundle || tipo == Tipo.Noticia || tipo == Tipo.Filtro || tipo == Tipo.CuratorDestacado || tipo == Tipo.CuratorLista || tipo == Tipo.CuratorJuego || tipo == Tipo.Gratis || tipo == Tipo.Suscripciones || tipo == Tipo.PortadaProximamente || tipo == Tipo.JuegoDLC || tipo == Tipo.JuegoBandaSonora)
	{
		idMaestra = juego.Id;
	}

	string descuento = string.Empty;
	string precio = string.Empty;
	string enlace = "/game/" + juego.Id + "/" + Herramientas.EnlaceAdaptador.Nombre(juego.Nombre) + "/";
	string enlaceNuevaPestaña = "_self";
	string iconoTienda = string.Empty;
	string codigoTexto = string.Empty;
	DateTime fechaDetectado = DateTime.Now;

	if (tipo == Tipo.PortadaNuevos || tipo == Tipo.PortadaPopulares || tipo == Tipo.PortadaLanzamientos || tipo == Tipo.PortadaProximamente || tipo == Tipo.MinimosHistoricos)
	{
		JuegoPrecio oferta = null;

		if (juego.PrecioMinimosHistoricos != null)
		{
			oferta = juego.PrecioMinimosHistoricos[0];

			if (tipo == Tipo.PortadaProximamente)
			{
				if (juego.PrecioMinimosHistoricos.Count > 1)
				{
					foreach (var historico in juego.PrecioMinimosHistoricos)
					{
						if (historico.DRM == JuegoDRM.Steam)
						{
							oferta = historico;
						}
					}
				}
			}
		}


		if (oferta != null)
		{
			descuento = oferta.Descuento.ToString() + "%";

			if (oferta.PrecioCambiado > 0)
			{
				precio = Herramientas.Precios.Euro(oferta.PrecioCambiado);
			}
			else
			{
				precio = Herramientas.Precios.Euro(oferta.Precio);
			}
			
			codigoTexto = oferta.CodigoTexto;
			fechaDetectado = oferta.FechaDetectado;

			//--------------------------------------------------------

			if (tipo == Tipo.MinimosHistoricos)
			{
				if (Herramientas.Bots.UserAgentEsBot(userAgent) == false)
				{
					enlace = Herramientas.EnlaceAcortador.Generar(oferta.Enlace, oferta.Tienda, usuarioPatreon, false);
				}
				else
				{
					enlace = oferta.Enlace;
				}

				enlaceNuevaPestaña = "_blank";
			}

			//--------------------------------------------------------

			List<Tiendas2.Tienda> tiendas = Tiendas2.TiendasCargar.GenerarListado();

			foreach (var tienda in tiendas)
			{
				if (tienda.Id == oferta.Tienda)
				{
					iconoTienda = tienda.ImagenIcono;
					break;
				}
			}
		}
	}

	JuegoDRM drmUsar = JuegoDRM.NoEspecificado;

	if (tipo == Tipo.Bundle)
	{
		drmUsar = drmBundle;
	}
	else if (tipo == Tipo.Noticia)
	{
		drmUsar = drmNoticia;
	}
	else if (tipo == Tipo.Gratis)
	{
		drmUsar = drmGratis;
	}
	else if (tipo == Tipo.Suscripciones)
	{
		drmUsar = drmSuscripcion;
	}
	else
	{
		if (juego.PrecioMinimosHistoricos?.Count > 0)
		{
			drmUsar = juego.PrecioMinimosHistoricos[0].DRM;
		}
	}

	bool usuarioTieneJuego = Herramientas.UsuarioJuegos.ComprobarSiTiene(juegosUsuario, juego, drmUsar);
	bool usuarioTieneDeseado = false;

	string fondoColor = string.Empty;
	string fondoDescuento = "background-color: darkgreen;";

	if (usuarioTieneJuego == true)
	{
		fondoColor = "background: radial-gradient(ellipse at top left, var(--fondoBotonPequeño), var(--fondoBien));";
		fondoDescuento = "backdrop-filter: brightness(70%);";
	}
	else
	{
		usuarioTieneDeseado = Herramientas.Deseados.ComprobarSiEsta(usuarioDeseadosSteam, usuarioDeseadosWeb, usuarioDeseadosGog, juego, drmUsar, true);

		if (usuarioTieneDeseado == true)
		{
			fondoColor = "background: radial-gradient(ellipse at top left, var(--fondoBotonPequeño), var(--fondoAlerta));";
			fondoDescuento = "backdrop-filter: brightness(70%);";
		}
	}

	bool usuarioConectado = false;

	if (juegosUsuario != null)
	{
		if (juegosUsuario.Steam != null)
		{
			if (juegosUsuario.Steam.Count > 0)
			{
				usuarioConectado = true;
			}
		}
	}

	int numeroTipo = (int)tipo;
	idTooltip = numeroTipo.ToString() + "-" + idMaestra.ToString() + "-" + drmUsar.ToString();

	if (idCurator > 0)
	{
		idTooltip = idTooltip + "-" + idCurator.ToString();
	}

	Herramientas.ToolTipDatos tooltip = Herramientas.Tooltip.Generar(idioma, tipo, juego, drmUsar, usuarioConectado, usuarioTieneJuego, usuarioTieneDeseado, idBundle, idGratis);

	<div class="tooltip-juego" onmousemove="enseñarTooltip(event, 'tooltip-@idTooltip')" @onmouseenter="(e => MostrarTooltip(e))">
		<div id="tooltip-@idTooltip" class="tooltip-relleno">
			@if (enseñarTooltip == true)
			{
				if (string.IsNullOrEmpty(tooltip.Video) == false)
				{
					string videoMostrarMp4 = tooltip.Video;
					string videoMostrarWebm = tooltip.Video.Replace(".mp4", ".webm");

					<video @key="idTooltip" onloadedmetadata="this.muted=true" playsinline autoplay loop muted style="width: 460px; height: 215px; object-fit: cover;" preload="metadata">
						<source src="@videoMostrarWebm" type="video/webm" />
					</video>
				}

				<div style="padding: 15px; text-align: left; max-width: 460px; display: flex; flex-direction: column; gap: 5px;">
					<div>
						@tooltip.Nombre
					</div>

					@if (tipo == Tipo.PortadaNuevos || tipo == Tipo.PortadaPopulares || tipo == Tipo.PortadaLanzamientos || tipo == Tipo.PortadaProximamente || tipo == Tipo.MinimosHistoricos)
					{
						<div style="display: flex; align-items: center; padding: 5px; text-align: left; justify-content: left;">
							@if (drmUsar != JuegoDRM.NoEspecificado)
							{
								<div style="display: flex; margin-right: 20px;">
									<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(JuegoDRM2.SacarImagen(drmUsar))" style="max-width: 20px; max-height: 20px;" alt="DRM" loading="lazy" />
								</div>
							}

							@if (string.IsNullOrEmpty(iconoTienda) == false)
							{
								<div style="display: flex; margin-right: 20px;">
									<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(iconoTienda)" style="width: 20px; height: 20px;" alt="Store" loading="lazy" />
								</div>
							}

							@if (string.IsNullOrEmpty(tooltip.ReviewsIcono) == false)
							{
								<div style="display: flex; margin-right: 20px;">
									<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(tooltip.ReviewsIcono)" style="width: 20px; height: 20px;" alt="Reviews" loading="lazy" />
								</div>
							}

							@if (string.IsNullOrEmpty(descuento) == false)
							{
								if (descuento != "0%" && descuento != "00%")
								{
									<div style="margin-right: 15px; background-color: darkgreen; padding: 5px 10px;">
										@descuento
									</div>
								}
							}

							@if (string.IsNullOrEmpty(precio) == false)
							{
								<div>
									@precio
								</div>
							}
						</div>
					}
					else if (tipo == Tipo.Bundle || tipo == Tipo.Suscripciones)
					{
						<div style="display: flex; align-items: center; padding: 5px; text-align: left; justify-content: left;">
							<div style="margin-right: 20px;">
								<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(JuegoDRM2.SacarImagen(drmUsar))" style="max-width: 20px; max-height: 20px;" alt="DRM" loading="lazy" />
							</div>

							@if (string.IsNullOrEmpty(tooltip.ReviewsIcono) == false)
							{
								<div style="margin-right: 20px;">
									<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(tooltip.ReviewsIcono)" style="width: 20px; height: 20px;" alt="Reviews" loading="lazy" />
								</div>
							}

							@if (juego.PrecioMinimosHistoricos != null)
							{
								foreach (var historico in juego.PrecioMinimosHistoricos)
								{
									if (historico.DRM == drmUsar)
									{
										<div style="text-align: center; font-size: 14px;">
											@Herramientas.Idiomas.BuscarTexto(idioma, "String25", "Bundle") @Herramientas.Precios.Euro(historico.Precio)
										</div>

										break;
									}
								}
							}
						</div>
					}
					else if (tipo == Tipo.Gratis)
					{
						<div style="display: flex; align-items: center; padding: 5px; text-align: left; justify-content: left;">
							<div style="margin-right: 20px;">
								<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(JuegoDRM2.SacarImagen(drmUsar))" style="max-width: 20px; max-height: 20px;" alt="DRM" loading="lazy" />
							</div>

							@if (string.IsNullOrEmpty(tooltip.ReviewsIcono) == false)
							{
								<div style="margin-right: 20px;">
									<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(tooltip.ReviewsIcono)" style="width: 20px; height: 20px;" alt="Reviews" loading="lazy" />
								</div>
							}
						</div>
					}
					else if (tipo == Tipo.Noticia)
					{
						<div style="display: flex; align-items: center; padding: 5px; text-align: left; justify-content: left;">
							<div style="margin-right: 20px;">
								<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(JuegoDRM2.SacarImagen(drmUsar))" style="max-width: 20px; max-height: 20px;" alt="DRM" loading="lazy" />
							</div>

							@if (string.IsNullOrEmpty(tooltip.ReviewsIcono) == false)
							{
								<div style="margin-right: 20px;">
									<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(tooltip.ReviewsIcono)" style="width: 22px; height: 22px;" alt="Reviews" loading="lazy" />
								</div>
							}
						</div>
					}
					else if (tipo == Tipo.Filtro)
					{
						<div style="display: flex; align-items: center; padding: 5px; text-align: left; justify-content: left;">
							@if (string.IsNullOrEmpty(tooltip.ReviewsIcono) == false)
							{
								<div style="margin-right: 20px;">
									<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(tooltip.ReviewsIcono)" style="width: 20px; height: 20px;" alt="Reviews" loading="lazy" />
								</div>
							}
						</div>
					}

					@if (string.IsNullOrEmpty(tooltip.BundlesActuales) == false || string.IsNullOrEmpty(tooltip.GratisActuales) == false || string.IsNullOrEmpty(tooltip.SuscripcionesActuales) == false)
					{
						<div style="font-size: 14px; padding: 5px;">
							<div style="margin-bottom: 5px;">
								@Herramientas.Idiomas.BuscarTexto(idioma, "String11", "Tooltip")
							</div>

							@if (string.IsNullOrEmpty(tooltip.BundlesActuales) == false)
							{
								<div>
									• @tooltip.BundlesActuales
								</div>
							}

							@if (string.IsNullOrEmpty(tooltip.GratisActuales) == false)
							{
								<div>
									• @tooltip.GratisActuales
								</div>
							}

							@if (string.IsNullOrEmpty(tooltip.SuscripcionesActuales) == false)
							{
								<div>
									• @tooltip.SuscripcionesActuales
								</div>
							}
						</div>
					}

					@if (string.IsNullOrEmpty(tooltip.BundlesPasados) == false || string.IsNullOrEmpty(tooltip.GratisPasados) == false || string.IsNullOrEmpty(tooltip.SuscripcionesPasadas) == false)
					{
						<div style="font-size: 14px; padding: 5px;">
							<div style="margin-bottom: 5px;">
								@Herramientas.Idiomas.BuscarTexto(idioma, "String1", "Tooltip")
							</div>

							@if (string.IsNullOrEmpty(tooltip.BundlesPasados) == false)
							{
								<div>
									• @tooltip.BundlesPasados
								</div>
							}

							@if (string.IsNullOrEmpty(tooltip.GratisPasados) == false)
							{
								<div>
									• @tooltip.GratisPasados
								</div>
							}

							@if (string.IsNullOrEmpty(tooltip.SuscripcionesPasadas) == false)
							{
								<div>
									• @tooltip.SuscripcionesPasadas
								</div>
							}
						</div>
					}
				</div>
			}
		</div>

		@if (tipo == Tipo.PortadaNuevos || tipo == Tipo.PortadaPopulares || tipo == Tipo.PortadaLanzamientos || tipo == Tipo.PortadaProximamente)
		{
			if (string.IsNullOrEmpty(fondoColor) == true)
			{
				fondoColor = "background: radial-gradient(ellipse at top left, var(--fondoBotonPequeño), var(--fondoOscuro));";
			}

			<a class="boton-pequeño" @oncontextmenu="(e => CopiarAlClipboard(e, enlace))" style="padding: 0px; @fondoColor" href="@enlace" target="@enlaceNuevaPestaña">
				<div class="perfil-flexible-centrado">
					<div style="max-width: 230px;">
						<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(juego.Imagenes.Header_460x215)" style="width: 100%; height: 100%;" alt="@juego.Nombre" loading="lazy" />
					</div>

					<div class="cjuego-titulo" style="width: 100%; display: flex; flex-flow: column wrap;">
						<div class="minimo-fuente">@juego.Nombre</div>

						<div style="margin-top: 15px; display: flex; align-items: center; gap: 10px;">
							@if (drmUsar != JuegoDRM.NoEspecificado)
							{
								<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(JuegoDRM2.SacarImagen(drmUsar))" style="width: 18px; height: 18px;" alt="DRM" loading="lazy" />
								<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(iconoTienda)" style="width: 18px; height: 18px;" alt="Store" loading="lazy" />
							}

							@if (tipo == Tipo.PortadaNuevos)
							{
								<div class="cjuego-fecha">@Herramientas.Calculadora.DiferenciaTiempo(fechaDetectado, idioma)</div>
							}
							else if (tipo == Tipo.PortadaLanzamientos)
							{
								<div class="cjuego-fecha">@Herramientas.Calculadora.DiferenciaTiempo(juego.Caracteristicas.FechaLanzamientoSteam, idioma)</div>
							}
						</div>
					</div>

					<div style="display: flex; align-items: center;">
						@if (string.IsNullOrEmpty(descuento) == false)
						{
							if (descuento != "0%")
							{
								<div class="cjuego-descuento" style="text-align: center; margin: 0px; @fondoDescuento">
									@descuento
								</div>
							}
						}

						<div class="cjuego-precio" style="padding: 5px 15px; text-align: center;">
							@precio
						</div>
					</div>
				</div>
			</a>
		}

		@if (tipo == Tipo.MinimosHistoricos)
		{
			if (string.IsNullOrEmpty(fondoColor) == true)
			{
				fondoColor = "background: radial-gradient(ellipse at top left, var(--fondoBotonPequeño), var(--fondoOscuro));";
			}

			<button @onclick="(e => AbrirEnlace(e, enlace))" @oncontextmenu="(e => CopiarAlClipboard(e, enlace))" class="boton-pequeño" style="padding: 0px; @fondoColor">
				<div class="perfil-flexible-centrado">
					<div style="max-width: 230px;">
						<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(juego.Imagenes.Header_460x215)" style="width: 100%; height: 100%;" loading="lazy" />
					</div>

					<div style="width: 100%; display: flex; flex-flow: column wrap; padding: 10px 20px;">
						<div class="minimo-fuente">@juego.Nombre</div>

						<div class="perfil-flexible-centrado" style="justify-content: left; margin-top: 12px; gap: 12px;">
							<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(JuegoDRM2.SacarImagen(drmUsar))" style="width: 20px; height: 20px;" loading="lazy" />

							<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(iconoTienda)" style="width: 20px; height: 20px;" loading="lazy" />

							@if (juego.Analisis != null)
							{
								if (string.IsNullOrEmpty(juego.Analisis.Porcentaje) == false)
								{
									if (int.Parse(juego.Analisis.Porcentaje) > 74)
									{
										<img src="/imagenes/analisis/positivo3.svg" style="max-width: 22px; max-height: 22px;" loading="lazy" alt="Reviews Good" />
									}

									if (int.Parse(juego.Analisis.Porcentaje) > 49 && int.Parse(juego.Analisis.Porcentaje) < 75)
									{
										<img src="/imagenes/analisis/meh3.svg" style="max-width: 22px; max-height: 22px;" loading="lazy" alt="Reviews Meh" />
									}

									if (int.Parse(juego.Analisis.Porcentaje) < 50)
									{
										<img src="/imagenes/analisis/negativo3.svg" style="max-width: 22px; max-height: 22px;" loading="lazy" alt="Reviews Bad" />
									}
								}
							}
						</div>
					</div>

					<div style="display: flex; align-items: center;">
						<div style="text-align: center; padding: 10px 15px; margin: 0px; min-width: 65px; @fondoDescuento">
							@descuento
						</div>

						<div style="padding: 5px 15px; min-width: 110px; text-align: center; font-size: 18px;">
							@precio
						</div>
					</div>
				</div>
			</button>

			if (string.IsNullOrEmpty(codigoTexto) == false)
			{
				<div style="background-color: transparent; padding: 5px 10px; display: flex; align-items: center; gap: 10px; top: 15px; bottom: 15px; left: 100%; width: 220px; position: absolute;">
					<button @onclick="(e => CopiarAlClipboard(e, codigoTexto))" class="juego-boton-pequeño" style="width: fit-content; padding: 10px 15px;">
						<div style="display: flex; flex-direction: column; gap: 10px; text-align: center;">
							<div>@Herramientas.Idiomas.BuscarTexto(idioma, "String90", "Game")</div>
							<div>@codigoTexto</div>
						</div>
					</button>
				</div>
			}
		}

		@if (tipo == Tipo.Bundle)
		{
			<button @onclick="(e => AbrirEnlace(e, enlace, false))" @oncontextmenu="(e => CopiarAlClipboard(e, enlace))" class="boton-pequeño" style="padding: 0px; @fondoColor">
				<div style="padding: 0px; position: relative;">
					@{
						bool añadirNuevo = false;

						if (juego.Bundles != null)
						{
							if (juego.Bundles.Count == 1)
							{
								añadirNuevo = true;
							}
						}

						if (juego.Suscripciones != null)
						{
							if (juego.Suscripciones.Count > 0)
							{
								foreach (var suscripcion in juego.Suscripciones)
								{
									if (suscripcion.DRM == drmBundle)
									{
										añadirNuevo = false;
										break;
									}
								}
							}
						}
					}

					<div style="text-align: center;">
						<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(juego.Imagenes.Header_460x215, 292, 136)" style="width: 100%; height: 100%;" alt="@juego.Nombre" />
					</div>

					<div style="display: flex; align-items: center;">
						<div style="display: flex; align-items: center; gap: 15px; padding: 15px; width: 100%;">
							<img src="@Juegos.JuegoDRM2.SacarImagen(drmBundle)" style="max-width: 20px; max-height: 20px;" alt="@Juegos.JuegoDRM2.DevolverDRM(drmBundle)" />

							@if (juego.Analisis != null)
							{
								if (string.IsNullOrEmpty(juego.Analisis.Porcentaje) == false)
								{
									if (int.Parse(juego.Analisis.Porcentaje) > 74)
									{
										<img src="/imagenes/analisis/positivo3.svg" style="max-width: 22px; max-height: 22px;" loading="lazy" alt="Reviews Good" />
									}

									if (int.Parse(juego.Analisis.Porcentaje) > 49 && int.Parse(juego.Analisis.Porcentaje) < 75)
									{
										<img src="/imagenes/analisis/meh3.svg" style="max-width: 22px; max-height: 22px;" loading="lazy" alt="Reviews Meh" />
									}

									if (int.Parse(juego.Analisis.Porcentaje) < 50)
									{
										<img src="/imagenes/analisis/negativo3.svg" style="max-width: 22px; max-height: 22px;" loading="lazy" alt="Reviews Bad" />
									}
								}
							}

							@if (añadirNuevo == true)
							{
								<div style="font-size: 14px; width: 100%; text-align: center;">
									@Herramientas.Idiomas.BuscarTexto(idioma, "String24", "Bundle")
								</div>
							}
						</div>

						@if (dlcsBundle != null)
						{
							if (dlcsBundle.Count > 0)
							{
								<div style="background-color: var(--fondoDlc); font-size: 14px; padding: 15px 10px; flex-shrink: 0;">
									@if (dlcsBundle.Count == 1)
									{
										@("+" + Herramientas.Idiomas.BuscarTexto(idioma, "String27", "Bundle"))
									}
									else if (dlcsBundle.Count > 1)
									{
										@string.Format("+ " + Herramientas.Idiomas.BuscarTexto(idioma, "String28", "Bundle"), dlcsBundle.Count)
									}
								</div>
							}
						}
					</div>
				</div>
			</button>
		}

		@if (tipo == Tipo.Noticia)
		{
			string imagen = juego.Imagenes.Library_600x900;

			if (juego.Tipo != JuegoTipo.Game)
			{
				imagen = juego.Imagenes.Header_460x215;
			}

			<button @onclick="(e => AbrirEnlace(e, enlaceNoticia, true))" @oncontextmenu="(e => CopiarAlClipboard(e, enlace))" class="boton-pequeño" style="padding: 0px; @fondoColor">
				<div>
					<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(imagen)" style="max-width: 100%; max-height: 100%;" alt="@juego.Nombre" />
				</div>

				<div style="display: flex; align-items: center; justify-content: right; height: 40px;">
					<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(Juegos.JuegoDRM2.SacarImagen(drmNoticia))" style="max-width: 24px; max-height: 24px; margin: 10px;" alt="DRM" />
				</div>
			</button>
		}

		@if (tipo == Tipo.Filtro)
		{
			<button @onclick="(e => AbrirEnlace(e, enlace, false))" class="boton-pequeño" style="padding: 0px; margin: 10px 0px; @fondoColor">
				<div style="display: flex; align-items: center;">
					<div>
						<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(juego.Imagenes.Header_460x215)" style="width: 230px; height: 107px;" />
					</div>

					<div style="padding: 0px 20px;">
						<div>
							@juego.Nombre
						</div>

						<div style="margin-top: 10px; font-size: 15px;">
							<CajaJuegoMensaje idioma="@idioma" juego="@juego" />
						</div>
					</div>
				</div>
			</button>
		}

		@if (tipo == Tipo.CuratorDestacado)
		{
			<button @onclick="(e => AbrirEnlace(e, enlace, false))" @oncontextmenu="(e => CopiarAlClipboard(e, enlace))" class="boton-pequeño" style="height: 100%; padding: 0px; @fondoColor">
				<div style="display: flex; flex-direction: column; height: 100%;" title="@juego.Nombre">
					<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(juego.Imagenes.Library_600x900)" style="max-height: 278px; object-fit: cover;" alt="@juego.Nombre" />

					<div style="font-size: 14px; display: flex; align-items: center; justify-content: center; height: 100%; padding: 10px; text-align: center;">
						<CajaJuegoMensaje idioma="@idioma" juego="@juego" />
					</div>
				</div>
			</button>
		}

		@if (tipo == Tipo.CuratorLista)
		{
			<button @onclick="(e => AbrirEnlace(e, enlace, false))" @oncontextmenu="(e => CopiarAlClipboard(e, enlace))" class="boton-pequeño" style="padding: 0px; @fondoColor">
				<div style="display: flex; align-items: center;">
					<div>
						<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(juego.Imagenes.Header_460x215)" style="width: 230px; height: 107px;" alt="@juego.Nombre" />
					</div>

					<div style="padding: 0px 20px;">
						<div>
							@juego.Nombre
						</div>

						<div style="margin-top: 10px; font-size: 15px;">
							<CajaJuegoMensaje idioma="@idioma" juego="@juego" />
						</div>
					</div>
				</div>
			</button>
		}

		@if (tipo == Tipo.CuratorJuego)
		{
			<button @onclick="(e => AbrirEnlace(e, enlace, false))" @oncontextmenu="(e => CopiarAlClipboard(e, enlace))" class="boton-pequeño" style="height: 100%; padding: 0px; @fondoColor">
				<div style="display: flex; flex-direction: column; height: 100%;" title="@juego.Nombre">
					<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(juego.Imagenes.Header_460x215, 255, 120)" style="max-width: 100vw; max-height: 100vh; object-fit: cover;" alt="@juego.Nombre" loading="lazy" />

					<div style="font-size: 14px; display: flex; align-items: center; justify-content: center; height: 100%; padding: 10px; text-align: center;">
						<CajaJuegoMensaje idioma="@idioma" juego="@juego" />
					</div>
				</div>
			</button>
		}

		@if (tipo == Tipo.Gratis)
		{
			<button @onclick="(e => AbrirEnlace(e, enlaceGratis, true))" @oncontextmenu="(e => CopiarAlClipboard(e, enlace))" class="boton-pequeño" style="padding: 0px; text-align: center; position: relative; @fondoColor">
				<div style="width: 100%; text-align: center;">
					<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(juego.Imagenes.Header_460x215)" style="max-width: 100%; height: 100%;" alt="@juego.Nombre" />

					<div style="margin: 10px 0px; text-align: center; padding: 5px;">
						@{
							Gratis2.Gratis gratis = Gratis2.GratisCargar.DevolverGratis(tipoGratis);
						}

						<div style="display: flex; align-items: center; justify-content: center; gap: 20px; height: 40px;">
							<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(gratis.ImagenLogo)" style="max-width: 140px; max-width: 140px;" alt="Store" />

							@if (gratis.DRMEnseñar == true)
							{
								<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(Juegos.JuegoDRM2.SacarImagen(drmGratis))" style="width: 28px; height: 28px;" alt="DRM" />
							}
						</div>
					</div>
				</div>
			</button>
		}

		@if (tipo == Tipo.Suscripciones)
		{
			<button @onclick="(e => AbrirEnlace(e, enlaceSuscripcion, true))" @oncontextmenu="(e => CopiarAlClipboard(e, enlace))" class="boton-pequeño" style="font-size: 16px; cursor: pointer; color: var(--colorTexto); text-decoration: none; padding: 0px; max-width: 235px;">
				<div class="boton-expandir" style="@fondoColor display: flex; flex-direction: column;">
					<div>
						<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(juego.Imagenes.Library_600x900)" style="max-width: 100%; max-height: 100%;" alt="@juego.Nombre" />
					</div>

					<div style="width: 100%; text-align: right; padding: 10px;">
						<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(JuegoDRM2.SacarImagen(drmUsar))" style="max-width: 20px; max-height: 20px;" />
					</div>
				</div>
			</button>
		}

		@if (tipo == Tipo.JuegoDLC)
		{
			<button @onclick="(e => AbrirEnlace(e, enlace, false))" @oncontextmenu="(e => CopiarAlClipboard(e, enlace))" style="font-size: 16px; cursor: pointer; color: var(--colorTexto); text-decoration: none; border: 0px; padding: 0px; background: transparent; text-align: left; width: 100%;">
				<div class="boton-expandir" style="background: color-mix(in srgb, var(--fondoBotonPequeño), var(--fondoDlc) 30%); display: flex; align-items: center; gap: 20px;">
					<div>
						<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(juego.Imagenes.Header_460x215)" style="max-width: 230px; max-height: 107px;" alt="@juego.Nombre" />
					</div>

					<div style="width: 100%;">
						<div>@juego.Nombre</div>
						<div style="margin-top: 10px; font-size: 14px;">
							<CajaJuegoMensaje juego="@juego" idioma="@idioma" />
						</div>
					</div>
				</div>
			</button>
		}

		@if (tipo == Tipo.JuegoBandaSonora)
		{
			<button @onclick="(e => AbrirEnlace(e, enlace, false))" @oncontextmenu="(e => CopiarAlClipboard(e, enlace))" style="font-size: 16px; cursor: pointer; color: var(--colorTexto); text-decoration: none; border: 0px; padding: 0px; background: transparent; text-align: left; width: 100%;">
                <div class="boton-expandir" style="background: color-mix(in srgb, var(--fondoBotonPequeño), var(--fondoBandaSonora) 30%); display: flex; align-items: center; gap: 20px;">
                    <div>
                        <img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(juego.Imagenes.Header_460x215)" style="max-width: 230px; max-height: 107px;" alt="@juego.Nombre" />
                    </div>

                    <div style="width: 100%;">
                        <div>@juego.Nombre</div>
                        <div style="margin-top: 10px; font-size: 14px;">
                            <CajaJuegoMensaje juego="@juego" idioma="@idioma"/>
                        </div>
                    </div>
                </div>
            </button>
		}
	</div>
}

@code {

	#nullable disable

	private string idTooltip = string.Empty;

	[Parameter]
	public string idioma { get; set; }

	[Parameter]
	public string userAgent { get; set; }

	[Parameter]
	public Herramientas.UsuarioListadosJuegos juegosUsuario { get; set; }

	[Parameter]
	public string usuarioDeseadosSteam { get; set; }

	[Parameter]
	public string usuarioDeseadosWeb { get; set; }

	[Parameter]
	public string usuarioDeseadosGog { get; set; }

	[Parameter]
	public bool usuarioPatreon { get; set; }

	[Parameter]
	public Juego juego { get; set; }

	[Parameter]
	public Tipo tipo { get; set; }

	[Parameter]
	public int idBundle { get; set; }

	[Parameter]
	public JuegoDRM drmBundle { get; set; }

	[Parameter]
	public List<string> dlcsBundle { get; set; }

	[Parameter]
	public string enlaceNoticia { get; set; }

	[Parameter]
	public JuegoDRM drmNoticia { get; set; }

	[Parameter]
	public int idCurator { get; set; }

	[Parameter]
	public int idGratis { get; set; }

	[Parameter]
	public string enlaceGratis { get; set; }

	[Parameter]
	public JuegoDRM drmGratis { get; set; }

	[Parameter]
	public Gratis2.GratisTipo tipoGratis { get; set; }

	[Parameter]
	public string enlaceSuscripcion { get; set; }

	[Parameter]
	public JuegoDRM drmSuscripcion { get; set; }

	public enum Tipo
	{
		PortadaNuevos,
		MinimosHistoricos,
		Bundle,
		Noticia,
		Filtro,
		CuratorDestacado,
		CuratorLista,
		CuratorJuego,
		Gratis,
		Suscripciones,
		PortadaPopulares,
		PortadaLanzamientos,
		PortadaProximamente,
		JuegoDLC,
		JuegoBandaSonora
	}

	#region Abrir Enlace

	private async void AbrirEnlace(MouseEventArgs e, string enlace, bool nuevaVentana = true)
	{
		string comando = "_blank";

		if (nuevaVentana == false)
		{
			comando = "_self";
		}

		await JavaScript.InvokeVoidAsync("open", enlace, comando);
	}

	#endregion

	#region Portapapeles

	bool enseñarAlerta = false;
	private PeriodicTimer cronometro = null;
	private int cronometroContador = 0;
	private int cronometroLimite = 10;

	private async void CopiarAlClipboard(MouseEventArgs e, string textoEnlace)
	{
		if (textoEnlace?.Contains("https://") == false)
		{
			textoEnlace = "https://pepeizqdeals.com" + textoEnlace;
		}

		enseñarAlerta = true;
		await JavaScript.InvokeVoidAsync("clipboardCopy.copyText", textoEnlace);

		cronometroContador = 0;
		cronometro = new PeriodicTimer(TimeSpan.FromSeconds(1));

		while (await cronometro.WaitForNextTickAsync())
		{
			cronometroContador += 1;

			if (cronometroContador > cronometroLimite)
			{
				enseñarAlerta = false;
				cronometro.Dispose();
				await InvokeAsync(StateHasChanged);
			}
		}
	}

	private void CerrarAvisoClipboard()
	{
		enseñarAlerta = false;
		cronometroContador = 0;

		if (cronometro != null)
		{
			cronometro.Dispose();
		}
	}

	#endregion

	#region Enseñar Tooltip Juego

	bool enseñarTooltip = false;

	private void MostrarTooltip(MouseEventArgs e)
	{
		enseñarTooltip = true;
    }

	#endregion
}
