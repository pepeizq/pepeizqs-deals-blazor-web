@using Noticias

<style>
	.cnoticia-expandir {
		transition: transform .2s;
		border: 2px solid var(--fondoOscuro);
		padding: 1px;
	}

	.cnoticia-expandir:hover {
		transform: scale(1.01);
		border: 2px solid var(--fondoCodigo);
	}
</style>

<div style="margin-top: 30px;">
	<a href="/news/@noticia.Id/@Herramientas.EnlaceAdaptador.Nombre(titulo)/" style="cursor: pointer; text-decoration: none; color: var(--colorTexto);">
		<div class="cnoticia-expandir" style="background-color: var(--fondoBotonPequeño); display: flex; align-items: center;" title="@titulo">
			@{
				string tamañoFuente = "16px;";
				string gapCaja = "10px;";

				int anchoImagen = 200;
				int altoImagen = 110;

				if (tipo == Tipo.Portada)
				{
					if (DateTime.Now.Subtract(noticia.FechaEmpieza).TotalDays < 1)
					{
						tamañoFuente = "18px;";
						gapCaja = "15px;";

						anchoImagen = 250;
						altoImagen = 140;
					}
				}

				string estiloImagen = "width: " + anchoImagen.ToString() + "px; height: " + altoImagen.ToString() + "px;";
			}
			
			<div>
				<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(noticia.Imagen, anchoImagen, anchoImagen)" style="@estiloImagen object-fit: cover; opacity: 0.8;" alt="@titulo" loading="lazy" />
			</div>

			<div style="padding: 10px 20px; display: flex; flex-direction: column; gap: @gapCaja">
				<div style="font-size: @tamañoFuente">@titulo</div>

				<div style="display: flex; align-items: center; gap: 15px;">
					@{
						string icono = string.Empty;

						if (noticia.Tipo == NoticiaTipo.Bundles)
						{
							icono = Bundles2.BundlesCargar.DevolverBundle(noticia.BundleTipo).ImagenIcono;
						}
						else if (noticia.Tipo == NoticiaTipo.Gratis)
						{
							icono = Gratis2.GratisCargar.DevolverGratis(noticia.GratisTipo).ImagenIcono;
						}
						else if (noticia.Tipo == NoticiaTipo.Suscripciones)
						{
							icono = Suscripciones2.SuscripcionesCargar.DevolverSuscripcion(noticia.SuscripcionTipo).ImagenIcono;
						}
						else if (noticia.Tipo == NoticiaTipo.Web)
						{
							icono = "/favicons/favicon-96x96.png";
						}

						if (string.IsNullOrEmpty(icono) == false)
						{
							<div>
								<img src="@Herramientas.Ficheros.Imagenes.ServidorExterno(icono, 18, 18)" style="width: 18px; height: 18px;" alt="@Noticias.NoticiasCargar.Traduccion(noticia.Tipo, idioma)" loading="lazy" />
							</div>
						}
					}

					<div style="font-size: 14px;">
						@mensajeTiempo
					</div>
				</div>
			</div>
		</div>
	</a>
</div>

@code {

	#nullable disable

	[Parameter]
	public string idioma { get; set; }

	[Parameter]
	public Noticias.Noticia noticia { get; set; }

	[Parameter]
	public Tipo tipo { get; set; } = Tipo.Desconocido;

	public enum Tipo
	{
		Desconocido,
		Portada,
		UltimasNoticias
	}

	private string titulo = string.Empty;
	private string mensajeTiempo = string.Empty;

	protected override async Task OnAfterRenderAsync(bool primerRender)
	{
		titulo = Herramientas.Idiomas.ElegirTexto(idioma, noticia.TituloEn, noticia.TituloEs);
		mensajeTiempo = Herramientas.Calculadora.DiferenciaTiempo(noticia.FechaEmpieza, idioma);
	}
}
